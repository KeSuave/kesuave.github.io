---
import ArrowCard from "@components/ArrowCard.astro";
import Container from "@components/Container.astro";
import Link from "@components/Link.astro";
import { SITE } from "@consts";
import PageLayout from "@layouts/PageLayout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

import { getLangFromUrl, languages, useTranslations } from "@i18n/utils";

export async function getStaticPaths() {
  const langs = Object.keys(languages);

  return langs.map((lang) => ({ params: { lang } }));
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const blog = (await getCollection("blog", ({id}: CollectionEntry<"blog">) => id.startsWith(lang)) as CollectionEntry<"blog">[])
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_POSTS_ON_HOMEPAGE)
  .map(post => {
    return {
      ...post,
      slug: post.slug.slice(3),
    };
  });

const projects = (await getCollection("projects", ({id}: CollectionEntry<"projects">) => id.startsWith(lang)) as CollectionEntry<"projects">[])
  .filter(project => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_PROJECTS_ON_HOMEPAGE)
  .map(project => {
    return {
      ...project,
      slug: project.slug.slice(3),
    };
  });
---

<PageLayout title={t("home.title")} description={t("home.description")}>
  <Container>
    <h4 class="animate font-semibold text-black dark:text-white">
      {t("home.content.intro")}
    </h4>
    <div class="space-y-16">
      <section>
        <article class="space-y-4">
          <p class="animate">
            {t("home.content.description")}
          </p>
        </article>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            {t("home.content.blog.latest")}
          </h5>
          <Link href={`/${lang}/blog`}>
            {t("home.content.blog.all")}
          </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {blog.map(post => (
            <li>
              <ArrowCard entry={post} />
            </li>
          ))}
        </ul>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            {t("home.content.projects.latest")}
          </h5>
          <Link href={`/${lang}/projects`}>
            {t("home.content.projects.all")}
          </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {projects.map(project => (
            <li>
              <ArrowCard entry={project} />
            </li>
          ))}
        </ul>
      </section>
    </div>
  </Container>
</PageLayout>
